// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package ControlTopic;

// <auto-generated>
//
// Generated from file `Control.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public interface ControlPrx extends Ice.ObjectPrx
{
    public void connect();

    public void connect(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connect();

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connect(Ice.Callback __cb);

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_connect(Callback_Control_connect __cb);

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx, Callback_Control_connect __cb);

    public void end_connect(Ice.AsyncResult __result);

    public void disconnect();

    public void disconnect(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnect();

    public Ice.AsyncResult begin_disconnect(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnect(Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnect(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnect(Callback_Control_disconnect __cb);

    public Ice.AsyncResult begin_disconnect(java.util.Map<String, String> __ctx, Callback_Control_disconnect __cb);

    public void end_disconnect(Ice.AsyncResult __result);

    public void setLeftMotorSpeed(int speed);

    public void setLeftMotorSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed, Callback_Control_setLeftMotorSpeed __cb);

    public Ice.AsyncResult begin_setLeftMotorSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_setLeftMotorSpeed __cb);

    public void end_setLeftMotorSpeed(Ice.AsyncResult __result);

    public void setRightMotorSpeed(int speed);

    public void setRightMotorSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed, Callback_Control_setRightMotorSpeed __cb);

    public Ice.AsyncResult begin_setRightMotorSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_setRightMotorSpeed __cb);

    public void end_setRightMotorSpeed(Ice.AsyncResult __result);

    public void driveForward();

    public void driveForward(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveForward();

    public Ice.AsyncResult begin_driveForward(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveForward(Ice.Callback __cb);

    public Ice.AsyncResult begin_driveForward(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveForward(Callback_Control_driveForward __cb);

    public Ice.AsyncResult begin_driveForward(java.util.Map<String, String> __ctx, Callback_Control_driveForward __cb);

    public void end_driveForward(Ice.AsyncResult __result);

    public void driveForwardSpeed(int speed);

    public void driveForwardSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed, Callback_Control_driveForwardSpeed __cb);

    public Ice.AsyncResult begin_driveForwardSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_driveForwardSpeed __cb);

    public void end_driveForwardSpeed(Ice.AsyncResult __result);

    public void driveBackward();

    public void driveBackward(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveBackward();

    public Ice.AsyncResult begin_driveBackward(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveBackward(Ice.Callback __cb);

    public Ice.AsyncResult begin_driveBackward(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveBackward(Callback_Control_driveBackward __cb);

    public Ice.AsyncResult begin_driveBackward(java.util.Map<String, String> __ctx, Callback_Control_driveBackward __cb);

    public void end_driveBackward(Ice.AsyncResult __result);

    public void driveBackwardSpeed(int speed);

    public void driveBackwardSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed, Callback_Control_driveBackwardSpeed __cb);

    public Ice.AsyncResult begin_driveBackwardSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_driveBackwardSpeed __cb);

    public void end_driveBackwardSpeed(Ice.AsyncResult __result);

    public void driveStop();

    public void driveStop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveStop();

    public Ice.AsyncResult begin_driveStop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_driveStop(Ice.Callback __cb);

    public Ice.AsyncResult begin_driveStop(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_driveStop(Callback_Control_driveStop __cb);

    public Ice.AsyncResult begin_driveStop(java.util.Map<String, String> __ctx, Callback_Control_driveStop __cb);

    public void end_driveStop(Ice.AsyncResult __result);

    public void turnLeft();

    public void turnLeft(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnLeft();

    public Ice.AsyncResult begin_turnLeft(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnLeft(Ice.Callback __cb);

    public Ice.AsyncResult begin_turnLeft(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnLeft(Callback_Control_turnLeft __cb);

    public Ice.AsyncResult begin_turnLeft(java.util.Map<String, String> __ctx, Callback_Control_turnLeft __cb);

    public void end_turnLeft(Ice.AsyncResult __result);

    public void turnLeftSpeed(int speed);

    public void turnLeftSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed, Callback_Control_turnLeftSpeed __cb);

    public Ice.AsyncResult begin_turnLeftSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_turnLeftSpeed __cb);

    public void end_turnLeftSpeed(Ice.AsyncResult __result);

    public void turnRight();

    public void turnRight(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnRight();

    public Ice.AsyncResult begin_turnRight(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnRight(Ice.Callback __cb);

    public Ice.AsyncResult begin_turnRight(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnRight(Callback_Control_turnRight __cb);

    public Ice.AsyncResult begin_turnRight(java.util.Map<String, String> __ctx, Callback_Control_turnRight __cb);

    public void end_turnRight(Ice.AsyncResult __result);

    public void turnRightSpeed(int speed);

    public void turnRightSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnRightSpeed(int speed);

    public Ice.AsyncResult begin_turnRightSpeed(int speed, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_turnRightSpeed(int speed, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnRightSpeed(int speed, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_turnRightSpeed(int speed, Callback_Control_turnRightSpeed __cb);

    public Ice.AsyncResult begin_turnRightSpeed(int speed, java.util.Map<String, String> __ctx, Callback_Control_turnRightSpeed __cb);

    public void end_turnRightSpeed(Ice.AsyncResult __result);

    public void kick();

    public void kick(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kick();

    public Ice.AsyncResult begin_kick(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_kick(Ice.Callback __cb);

    public Ice.AsyncResult begin_kick(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_kick(Callback_Control_kick __cb);

    public Ice.AsyncResult begin_kick(java.util.Map<String, String> __ctx, Callback_Control_kick __cb);

    public void end_kick(Ice.AsyncResult __result);

    public void sendInt(int i);

    public void sendInt(int i, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendInt(int i);

    public Ice.AsyncResult begin_sendInt(int i, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendInt(int i, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendInt(int i, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendInt(int i, Callback_Control_sendInt __cb);

    public Ice.AsyncResult begin_sendInt(int i, java.util.Map<String, String> __ctx, Callback_Control_sendInt __cb);

    public void end_sendInt(Ice.AsyncResult __result);

    public void shutDownRobot();

    public void shutDownRobot(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_shutDownRobot();

    public Ice.AsyncResult begin_shutDownRobot(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_shutDownRobot(Ice.Callback __cb);

    public Ice.AsyncResult begin_shutDownRobot(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_shutDownRobot(Callback_Control_shutDownRobot __cb);

    public Ice.AsyncResult begin_shutDownRobot(java.util.Map<String, String> __ctx, Callback_Control_shutDownRobot __cb);

    public void end_shutDownRobot(Ice.AsyncResult __result);

    public boolean isMoving();

    public boolean isMoving(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_isMoving();

    public Ice.AsyncResult begin_isMoving(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_isMoving(Ice.Callback __cb);

    public Ice.AsyncResult begin_isMoving(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_isMoving(Callback_Control_isMoving __cb);

    public Ice.AsyncResult begin_isMoving(java.util.Map<String, String> __ctx, Callback_Control_isMoving __cb);

    public boolean end_isMoving(Ice.AsyncResult __result);
}
